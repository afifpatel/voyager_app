{"version":3,"sources":["../server/issue.js"],"names":["validIssueStatus","New","Open","Assigned","Fixed","Verified","Closed","issueFieldType","status","owner","effort","created","completionDate","title","validateIssue","issue","field","type","convertIssue","date","Date","cleanupIssue","cleanedUpIssue","Object","keys","forEach"],"mappings":"AAAA;;;;;AAEA,MAAMA,mBAAmB;AACrBC,SAAK,IADgB;AAErBC,UAAM,IAFe;AAGrBC,cAAU,IAHW;AAIrBC,WAAO,IAJc;AAKrBC,cAAU,IALW;AAMrBC,YAAQ;AANa,CAAzB;;AASA,MAAMC,iBAAiB;AACnBC,YAAQ,UADW;AAEnBC,WAAO,UAFY;AAGnBC,YAAQ,UAHW;AAInBC,aAAS,UAJU;AAKnBC,oBAAgB,UALG;AAMnBC,WAAO;AANY,CAAvB;;AASA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAI,MAAMC,KAAV,IAAmBD,KAAnB,EAA0B;AACtB,cAAME,OAAOV,eAAeS,KAAf,CAAb;AACJ,YAAG,CAACC,IAAJ,EAAU;AACN,mBAAOF,MAAMC,KAAN,CAAP;AACH,SAFD,MAEO,IAAKC,QAAQ,UAAR,IAAsB,CAACF,MAAMC,KAAN,CAA5B,EAAyC;AAC5C,mBAAQ,GAAEA,KAAM,eAAhB;AACH;AACJ;;AAED,QAAG,CAAChB,iBAAiBe,MAAMP,MAAvB,CAAJ,EACI,OAAQ,GAAEO,MAAMP,MAAO,yBAAvB;;AAEJ,WAAO,IAAP;AAEC;;AAED,SAASU,YAAT,CAAsBH,KAAtB,EAA6B;AACzB,QAAGA,MAAMI,IAAT,EAAeJ,MAAMI,IAAN,GAAa,IAAIC,IAAJ,CAASL,MAAMI,IAAf,CAAb;AACf,WAAOE,aAAaN,KAAb,CAAP;AACH;;AAED,SAASM,YAAT,CAAsBN,KAAtB,EAA6B;AAC3B,UAAMO,iBAAiB,EAAvB;AACAC,WAAOC,IAAP,CAAYT,KAAZ,EAAmBU,OAAnB,CAA2BT,SAAS;AAClC,YAAIT,eAAeS,KAAf,CAAJ,EAA2BM,eAAeN,KAAf,IAAwBD,MAAMC,KAAN,CAAxB;AAC5B,KAFD;AAGF;AACE,WAAOM,cAAP;AAED;;AAED;AACA;AACA;;kBAEe,EAA+B;AAC1CR,gCADW;AAEXO,8BAFW;AAGXH;AAHW,C","file":"issue.js","sourcesContent":["'use strict';\n\nconst validIssueStatus = {\n    New: true,\n    Open: true,\n    Assigned: true,\n    Fixed: true,\n    Verified: true,\n    Closed: true,\n    };\n\nconst issueFieldType = {\n    status: 'required',\n    owner: 'required',\n    effort: 'optional',\n    created: 'required',\n    completionDate: 'optional',\n    title: 'required',\n    };\n\nfunction validateIssue(issue) {\n    for(const field in issue ){\n        const type = issueFieldType[field];\n    if(!type) {\n        delete issue[field];\n    } else if ( type == 'required' && !issue[field]){\n        return `${field} is required.`;\n    }\n}\n\nif(!validIssueStatus[issue.status])\n    return `${issue.status} is not a valid status.`;\n\nreturn null;\n\n}\n\nfunction convertIssue(issue) {\n    if(issue.date) issue.date = new Date(issue.date);\n    return cleanupIssue(issue);\n}\n\nfunction cleanupIssue(issue) {\n  const cleanedUpIssue = {};\n  Object.keys(issue).forEach(field => {\n    if (issueFieldType[field]) cleanedUpIssue[field] = issue[field];\n  });\n//   console.log(\"issue list returned issue =>\",issue);\n  return cleanedUpIssue;\n\n}\n\n// module.exports = {\n//     validateIssue : validateIssue\n// };\n\nexport default {                              //ES2015\n    validateIssue,\n    cleanupIssue,\n    convertIssue,\n};\n\n\n"]}