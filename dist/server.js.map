{"version":3,"sources":["../server.js"],"names":["SourceMapSupport","install","path","require","app","use","express","static","bodyParser","json","PORT","process","env","db","MongoClient","connect","MONGODB_URI","then","client","listen","console","log","catch","error","get","req","res","filter","query","start","end","start_date","end_date","$project","_id","$filter","input","as","cond","$and","$gte","$lte","moments","collection","aggregate","toArray","list","metadata","total_count","length","_metadata","records","status","message","events","$unwind","post","newMoment","body","date","JSON","stringify","updateOne","$push","result","err","newEvent","sendFile","resolve"],"mappings":"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","file":"server.js","sourcesContent":["// const express =  require('express');\n// const bodyParser= require('body-parser');\n// const MongoClient = require('mongodb').MongoClient;\n// const Issue = require('./issue.js');\n\n\nimport express from 'express';                          //ES2015 \nimport bodyParser from 'body-parser';                   //ES2015 \nimport { MongoClient, ObjectId } from 'mongodb';                  //ES2015 \nimport Issue from './issue.js'                          //ES2015 \nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';   //To let Node.js report line numbers by using source maps, we need to install thesource-map-support module, and also call the library in the application once\nSourceMapSupport.install();\nimport moment from 'moment-timezone'\n//deployment changes\nconst path = require(\"path\")\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n//deployment change\n// app.use(express.static(path.join(__dirname, \"client\", \"build\")))\n\n//deployment change\n// app.get(\"*\", (req, res) => {\n//     res.sendFile(path.resolve('static/index.html'));\n// });\n\n//deployment change\n\nconst PORT = process.env.PORT || 3000;\nlet db;\nMongoClient.connect(process.env.MONGODB_URI || 'mongodb://localhost').then(client => {\n    db = client.db('s3');\n    app.listen(PORT, () => {\n        console.log('App startedddddd on port 3000');\n    });\n}).catch(error => {\n    console.log('ERROR:', error);\n});\n\napp.get('/api/moments', (req,res) => {\n    var filter = [];\n\n    if(req.query.start && req.query.end){\n        var start_date = req.query.start + \"+02:00\";\n        var end_date = req.query.end + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.moment_history\" : 1}}, \n            { $project : { _id: 0, \"moments\" : \n            { $filter : \n \n                { input : \"$data.user.moment_history\", \n                  as: \"moment\", \n                  cond : \n                      { $and : \n                          [ { $gte: [\"$$moment.start\", start_date] },\n                            { $lte: [\"$$moment.end\", end_date]}\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n\n    else if (req.query.start){\n        var start_date = req.query.start + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.moment_history\" : 1}}, \n            { $project : { _id: 0, \"moments\" : \n            { $filter : \n \n                { input : \"$data.user.moment_history\", \n                  as: \"moment\", \n                  cond : \n                      { $and : \n                          [ { $gte: [\"$$moment.start\", start_date] },\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n    else if (req.query.end){\n        var end_date = req.query.end + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.moment_history\" : 1}}, \n            { $project : { _id: 0, \"moments\" : \n            { $filter : \n \n                { input : \"$data.user.moment_history\", \n                  as: \"moment\", \n                  cond : \n                      { $and : \n                          [ { $lte: [\"$$moment.end\", end_date]}\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n    else {\n        filter = [\n            {  $project : { \"data.user.moment_history\" : 1}}, \n            {  $project : { _id:0, moments :\"$data.user.moment_history\"}}  \n        ]\n    }\n    // if (req.query.start) {\n    //     var start_date = req.query.start + \"+02:00\"\n    //     // var start_date = new Date(req.query.start).toISOString()\n    // filter = [\n    //     {  $project : { \"data.user.moment_history\" : 1}}, \n    //     { $unwind : \"$data.user.moment_history\"},\n    //     { $match : {  \"data.user.moment_history.start\" :  start_date}}\n    // ]\n    // }\n    // else {\n    //     filter = [\n    //         {  $project : { \"data.user.moment_history\" : 1}}, \n    //         { $unwind : \"$data.user.moment_history\"},  \n    //     ]\n    // }\n        \n    // console.log(\"filter\", filter)\n\n    db.collection('sentiance').aggregate(filter).toArray().then( list => {\n        const metadata = { total_count: list.length };\n        // console.log(\"List received\", list)\n        res.json({ _metadata: metadata, records : list})\n    }).catch(error =>{\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n });\n\n app.get('/api/events', (req,res) => {\n    var filter = [];\n    \n    if(req.query.start && req.query.end){\n        var start_date = req.query.start + \"+02:00\";\n        var end_date = req.query.end + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.event_history\" : 1}}, \n            { $project : { _id: 0, \"events\" : \n            { $filter : \n \n                { input : \"$data.user.event_history\", \n                  as: \"event\", \n                  cond : \n                      { $and : \n                          [ { $gte: [\"$$event.start\", start_date] },\n                            { $lte: [\"$$event.end\", end_date]}\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n\n    else if (req.query.start){\n        var start_date = req.query.start + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.event_history\" : 1}}, \n            { $project : { _id: 0, \"events\" : \n            { $filter : \n \n                { input : \"$data.user.event_history\", \n                  as: \"event\", \n                  cond : \n                      { $and : \n                          [ { $gte: [\"$$event.start\", start_date] },\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n    else if (req.query.end){\n        var end_date = req.query.end + \"+02:00\";\n        filter = [\n            {  $project : { \"data.user.event_history\" : 1}}, \n            { $project : { _id: 0, \"events\" : \n            { $filter : \n \n                { input : \"$data.user.event_history\", \n                  as: \"event\", \n                  cond : \n                      { $and : \n                          [ { $lte: [\"$$event.end\", end_date]}\n                          ]\n                      } \n                }\n            }}}\n        ]\n    }\n    else {\n        filter = [\n            {  $project : { \"data.user.event_history\" : 1}}, \n            {  $project : { _id:0, events :\"$data.user.event_history\"}}  \n        ]\n    }\n    // if (req.query.start) {\n    // filter = [\n    //     {  $project : { \"data.user.event_history\" : 1}}, \n    //     { $unwind : \"$data.user.event_history\"},\n    //     { $match : {  \"data.user.event_history.start\" :  req.query.start}}\n    // ]\n    // }\n    // else {\n    //     filter = [\n    //         {  $project : { \"data.user.event_history\" : 1}}, \n    //         { $unwind : \"$data.user.event_history\"},  \n    //     ]\n    // }\n\n        \n    // console.log(\"filter\", filter)\n\n    db.collection('sentiance').aggregate(filter).toArray().then( list => {\n        const metadata = { total_count: list.length };\n        // console.log(\"List received\", list)\n        res.json({ _metadata: metadata, records : list})\n    }).catch(error =>{\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n });\n\napp.get('/api/dashboard', (req,res) => {\n    const filter = [\n                {  $project : { \"data.user.event_history\" : 1}}, \n                { $unwind : \"$data.user.event_history\"},  \n            ]\n    \n    db.collection('sentiance').aggregate(filter).toArray().then( list => {\n        const metadata = { total_count: list.length };\n        // console.log(\"List received\", list)\n        res.json({ _metadata: metadata, records : list})\n    }).catch(error =>{\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n    });\n \napp.post('/api/moment', (req,res) => {\n    const newMoment = req.body;\n    newMoment.date = newMoment.start + \"+02:00\"\n    newMoment.end = newMoment.end + \"+02:00\"\n   console.log(JSON.stringify(newMoment));\n    \n    db.collection('sentiance').updateOne({}, { $push : { \"data.user.moment_history\" : newMoment}}).then( result => \n        console.log(result)              \n        ).catch(err =>{\n        console.log(err);\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\n    });\n});\n\napp.post('/api/event', (req,res) => {\n    const newEvent = req.body;\n    newEvent.date = newEvent.start + \"+02:00\"\n    newEvent.end = newEvent.end + \"+02:00\"\n   console.log(JSON.stringify(newEvent));\n    \n    db.collection('sentiance').updateOne({}, { $push : { \"data.user.event_history\" : newEvent}}).then( result => \n        console.log(\"Added evnt\")        \n        ).catch(err =>{\n        console.log(err);\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\n    });\n});\n\napp.get('*', (req, res) => {\n    res.sendFile(path.resolve('client/public/index.html'));\n});\n"]}